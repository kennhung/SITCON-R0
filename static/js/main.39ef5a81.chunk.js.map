{"version":3,"sources":["components/IRC.js","components/NowAgendaBar.js","components/MainDisplay.js","components/BottomBar.js","components/Slido.js","components/SideBlock.js","components/FlashCard.js","R0Page/agendas.js","R0Page/constant.js","test/index.js","R0Page/R0Page.js","R0Page/index.js","App.js","serviceWorker.js","index.js"],"names":["IRC_name","process","REACT_APP_IRC_NAME","getUpdateTimeout","getMessage","e","edited_message","message","IRC","props","retriveMessage","state","token","latestUpdateId","fetch","then","res","json","getUpdate","result","_ismounted","ok","storaged","localStorage","getItem","JSON","parse","newItems","IRC_id","forEach","chat","title","setState","id","filter","sort","a","b","msg_a","msg_b","undefined","edit_date","message_id","map","i","update_id","msg","findIndex","length","slice","pop","error","saveMessage","m","document","querySelector","scrollTop","scrollHeight","error_code","description","setTimeout","items","REACT_APP_TG_BOT_TOKEN","stickersPath","clearSavedMsg","bind","this","addEventListener","key","console","log","clearTimeout","file_id","Promise","resolve","reject","file_path","catch","err","date","now","Date","getHours","toString","padStart","getMinutes","lastDate","className","item","sticker","getStickerWithFileId","is_animated","thumb","path","newStickersPath","transferDate","from","username","text","replace","width","src","alt","find","fieldName","msgArray","setItem","stringify","msgTable","Component","NowAgendaBar","getTime","Time","interval","setInterval","clearInterval","agenda","startTime","hours","minutes","endTime","name","MainDisplay","BottomBar","Slido","slido","CSS_state","iframe","frameBorder","SideBlock","mode","FlashCard","forumSpeakers","nowForumSpeaker","CSSTransition","in","timeout","classNames","url","agendaTypes","Agendas","type","getAgendas","data","sessions","x","room","zh","trim","qa","match","link","speakers","y","z","join","start","end","n","layoutTypes","layoutControlModes","prop","main","second","timeUp","Test","TG_BOT_TOKEN","inputToken","tokenInputOnChange","saveToken","nowPlaying","changeSpeaker","sessionStorage","agendas","nowTime","style","margin","padding","height","emoji","target","value","index","exact","onChange","onClick","marginLeft","marginBottom","R0Page","currentLayout","sidebar","getSlidoCSS","controlBotStateTypes","ModeSelect","REACT_APP_CONTROL_BOT_TOKEN","whitelist","REACT_APP_CONTROL_BOT_WHITELIST","defaultLayout","defaultSpeaker","defaultAgenda","R0Controller","chatIds","getCurrentControlModes","controlModes","parseInt","autoAgenda","controlBotState","ForumSpeaker","botId","getAgendaByTime","controlBotUpdate","updateAgenda","nowDate","currentAgendaIndex","startDate","endDate","controlBotSend","callback_query","newAgendaI","getDefaultLayout","reply_markup","modeKeyboard","Object","keys","k","push","method","headers","body","chat_id","some","keyboard","remove_keyboard","callback_query_id","includes","search","counter","callback_data","inline_keyboard","found","controlBotAnswerCallbackQuery","offset","control_offset","r","controlBotReceived","App","Boolean","window","location","hostname","ReactDOM","render","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.39ef5a81.chunk.js","sourcesContent":["import React, { Component } from 'react'\n\nconst IRC_name = process.env.REACT_APP_IRC_NAME;\nlet getUpdateTimeout = null;\n\nfunction getUpdate(token, latestUpdateId) {\n    return fetch('https://api.telegram.org/bot' + token + '/getUpdates?offset=' + (latestUpdateId + 1))\n        .then(res => res.json());\n}\n\nfunction getMessage(e) {\n    return e.edited_message || e.message;\n}\n\nexport class IRC extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            error: null,\n            items: [],\n            latestUpdateId: null,\n            token: process.env.REACT_APP_TG_BOT_TOKEN ? process.env.REACT_APP_TG_BOT_TOKEN : null,\n            stickersPath: {},\n            IRC_id: localStorage.IRC_id ? JSON.parse(localStorage.IRC_id) : null\n        };\n\n        this.clearSavedMsg = this.clearSavedMsg.bind(this);\n        this.saveMessage = this.saveMessage.bind(this);\n    }\n\n    componentDidMount() {\n        this._ismounted = true;\n        this.setState({\n            items: localStorage.getItem('messages') ? JSON.parse(localStorage.getItem('messages')) : this.state.items,\n        });\n\n        this.retriveMessage();\n\n        document.addEventListener('keypress', (e) => {\n            if (e.key === 'c') {\n                console.log('clear!')\n                this.clearSavedMsg()\n            }\n        })\n    }\n\n    componentWillUnmount() {\n        this._ismounted = false;\n        if (getUpdateTimeout) {\n            clearTimeout(getUpdateTimeout);\n            getUpdateTimeout = null;\n        }\n    }\n\n    getStickerWithFileId(file_id) {\n        return new Promise((resolve, reject) => {\n            fetch('https://api.telegram.org/bot' + this.state.token + '/getFile?file_id=' + file_id)\n                .then(res => res.json())\n                .then((result) => {\n                    if (result.ok && result.result) {\n                        resolve('https://api.telegram.org/file/bot' + this.state.token + '/' + result.result.file_path);\n                    } else {\n                        reject(result);\n                    }\n                })\n                .catch((err) => reject(err));\n        })\n    }\n\n    retriveMessage = () => {\n        if (this.state.token === null) return;\n\n        getUpdate(this.state.token, this.state.latestUpdateId).then((result) => {\n            if (!this._ismounted) return;\n\n            if (result.ok && result.result) {\n                let storaged = localStorage.getItem('messages') ? JSON.parse(localStorage.getItem('messages')) : [];\n                let newItems = [...storaged, ...result.result];\n\n                // if IRC_id is null, get one\n                if (!this.state.IRC_id) {\n                    newItems.forEach(e => {\n                        if (!this.state.IRC_id) {\n                            const message = getMessage(e);\n\n                            if (message.chat.title === IRC_name) {\n                                this.setState({\n                                    IRC_id: message.chat.id\n                                })\n                                localStorage.IRC_id = message.chat.id;\n                            }\n                        }\n                    })\n                }\n\n                newItems = newItems.filter((e) => {\n                    const message = getMessage(e);\n\n                    return message && message.chat && message.chat.id === this.state.IRC_id;\n                })\n\n                newItems = newItems.sort((a, b) => {\n                    const msg_a = getMessage(a);\n                    const msg_b = getMessage(b);\n\n                    if (msg_a.edit_date === undefined) msg_a.edit_date = 1;\n                    if (msg_b.edit_date === undefined) msg_b.edit_date = 1;\n\n                    return msg_a.message_id > msg_b.message_id ? 1 : msg_a.message_id === msg_b.message_id ?\n                        msg_a.edit_date > msg_b.edit_date ? 1 : msg_a.edit_date === msg_b.edit_date ? 0 : -1\n                        : -1;\n                });\n\n                newItems = newItems.map((e, i) => {\n                    const update_id = e.update_id;\n                    const msg = getMessage(e);\n\n                    const index = newItems.findIndex((e) => {\n                        const m = getMessage(e);\n                        return m.message_id === msg.message_id && e.update_id !== update_id;\n                    });\n\n                    if (i < index) return null;\n                    return e;\n                }).filter((e) => e !== null);\n\n                if (newItems.length >= 35) {\n                    newItems = newItems.slice(5, newItems.length)\n                }\n\n                this.setState({\n                    latestUpdateId: result.result.length > 0 ? [...result.result].pop().update_id : null,\n                    error: null\n                });\n\n                this.saveMessage(newItems);\n                let m = document.querySelector('.messages');\n                m.scrollTop = m.scrollHeight;\n            } else {\n                this.setState({\n                    error: { message: result.error_code + ': ' + result.description }\n                });\n            }\n            getUpdateTimeout = setTimeout(this.retriveMessage, 1000);\n        },\n            (error) => {\n                this.setState({\n                    error\n                });\n\n                getUpdateTimeout = setTimeout(this.retriveMessage, 1000);\n            }\n        )\n    }\n\n    transferDate(date) {\n        let now = new Date(date * 1000)\n        let hours = now.getHours().toString().padStart(2, '0')\n        let minutes = now.getMinutes().toString().padStart(2, '0')\n        return hours + ':' + minutes\n    }\n\n    msgTable() {\n        let { items } = this.state;\n        let lastDate = null;\n\n        return (\n            <div className=\"messages\">\n                {items.map((item, key) => {\n                    const message = getMessage(item);\n\n                    if (message.sticker && message.sticker.file_id && !this.state.stickersPath[message.sticker.file_id]) {\n                        this.getStickerWithFileId(message.sticker.is_animated ? message.sticker.thumb.file_id : message.sticker.file_id).then((path) => {\n                            let newStickersPath = this.state.stickersPath;\n                            newStickersPath[message.sticker.file_id] = path;\n                            this.setState({\n                                stickersPath: newStickersPath\n                            })\n                        })\n                    }\n\n                    let date = this.transferDate(message.date);\n\n                    const availableTypes = [\n                        \"photo\",\n                        \"audio\",\n                        \"voice\",\n                        \"document\",\n                        \"video\",\n                        \"video_note\",\n                        \"contact\",\n                        \"dice\",\n                        \"game\",\n                        \"poll\",\n                        \"venue\",\n                        \"location\",\n                        \"invoice\"\n                    ]\n\n                    return (\n                        <div key={key} className=\"message\">\n\n                            {(date !== lastDate && (lastDate = date)) ? (\n                                <div className=\"time\">{this.transferDate(message.date)}</div>) : \"\"}\n                            <div className=\"word\">\n                                {message.from.username}: {\n                                    message.text ?\n                                        message.text.replace(/^<(.+)>/, '$1') :\n                                        (message.sticker ? <img width=\"100px\" src={this.state.stickersPath[message.sticker.file_id]} alt=\"\" /> :\n                                            <strong>[{\n                                                availableTypes.find((fieldName) => {\n                                                    return !!message[fieldName];\n                                                })\n                                            }]</strong>)\n                                }\n                            </div>\n                        </div>\n                    )\n                })}\n            </div>\n        );\n\n    }\n\n    saveMessage(msgArray) {\n        localStorage.setItem('messages', JSON.stringify(msgArray));\n        // if(msgArray.length >= 25) {\n        //     msgArray = msgArray.slice(5, msgArray.length)\n        // }\n        this.setState({\n            items: msgArray\n        });\n    }\n\n    clearSavedMsg() {\n        this.saveMessage([]);\n    }\n\n    render() {\n        return (\n            <div className='IRC'>\n                {/* {this.state.error ? <div style={{ marginBottom: \"10px\" }}>Error: {this.state.error.message}</div> : null} */}\n                {this.msgTable()}\n            </div>\n        );\n    }\n}\n\nexport default IRC\n","import React, { Component } from 'react'\n// import './main.scss'\n\nexport class NowAgendaBar extends Component {\n\n  constructor(props) {\n    super(props)\n    this.getTime = this.getTime.bind(this)\n    this.state = {\n      Time: '00:00'\n    }\n  }\n\n  componentDidMount() {\n    this.getTime()\n    this.interval = setInterval(this.getTime, 5000)\n  }\n\n  componentWillUnmount() {\n    if (this.interval) {\n      clearInterval(this.interval);\n    }\n  }\n\n  agendaLoader(e) {\n    let agenda = e\n    if (typeof e === 'object') {\n      agenda = `${e.startTime.hours.toString().padStart(2, '0')}:${e.startTime.minutes.toString().padStart(2, '0')}`\n        + '~'\n        + `${e.endTime.hours.toString().padStart(2, '0')}:${e.endTime.minutes.toString().padStart(2, '0')}`\n        + ' '\n        + `${e.title}`\n        + ((e.name === '' || e.name === null) ? '' : ` by ${e.name}`)\n    }\n    return agenda\n  }\n\n  getTime() {\n    let now = new Date()\n    let hours = now.getHours().toString().padStart(2, '0')\n    let minutes = now.getMinutes().toString().padStart(2, '0')\n\n    let Time = hours + ':' + minutes\n\n    this.setState({ Time })\n  }\n\n  render() {\n    if (typeof this.props.agenda === 'object')\n      return (\n        <div className=\"NowAgendaBar\">\n          <div className=\"agenda\">\n            <div className=\"agenda-time\">{this.state.Time}</div>\n            <div className=\"agenda-title\">{this.props.agenda.title}</div>\n            <div className=\"agenda-name\">{this.props.agenda.name}</div>\n          </div>\n        </div>\n      )\n    else\n      return (\n        <div className=\"NowAgendaBar\">\n          <div className=\"agenda\">\n            <div className=\"agenda-time\">{this.getTime()}</div>\n            <div className=\"agenda-title\">{this.props.agenda}</div>\n          </div>\n        </div>\n      )\n  }\n}\n\nexport default NowAgendaBar\n","import React, { Component } from 'react'\n\nexport class MainDisplay extends Component {\n  \n    render() {\n      return (\n        <div className=\"MainDisplay\"></div>\n      )\n    }\n}\n\nexport default MainDisplay\n","import React, { Component } from 'react'\n\nexport class BottomBar extends Component {\n    render() {\n        return(\n            <div className=\"BottomBar\"></div>\n        )\n    }\n}\n\nexport default BottomBar\n","import React, { Component } from 'react'\n\nexport class Slido extends Component {\n  render() {\n    let slido = this.props.agenda.slido\n    // console.log(slido)\n    if(slido) {\n      return (\n        <div className={'slido ' + this.props.CSS_state}>\n          <iframe title=\"test\" src={slido.iframe} frameBorder=\"0\"></iframe>\n        </div>\n      )\n    } else {\n      return (\n        <div className=\"slido-disabled\"></div>\n      )\n    }\n  }\n}\n\nexport default Slido","import React, { Component } from 'react'\n\nexport class SideBlock extends Component {\n    render() {\n        if(this.props.mode === 'slido') {\n            return(\n                <div className=\"SideBlock SideBlock-slido\"></div>\n            )\n        } else {\n            return(\n                <div className=\"SideBlock SideBlock-irc\"></div>\n            )\n        }\n    }\n}\n\nexport default SideBlock\n","import React, { Component } from 'react'\nimport { CSSTransition } from 'react-transition-group'\n\nexport class FlashCard extends Component {\n\n    render() {\n        return (\n            <div className=\"FlashCard\">\n                {\n                    this.props.forumSpeakers.map((e, i) => (e !== undefined && this.props.nowForumSpeaker !== undefined) ? (\n                        <CSSTransition\n                            key={i}\n                            in={this.props.nowForumSpeaker.name === e.name}\n                            timeout={1000}\n                            classNames=\"speakers\"\n                        >\n                            <img src={`/img/${e.url}`} alt=\"\" key={'img' + i} className={`${(this.props.nowForumSpeaker.name === e.name) ? 'active' : ''}`} />\n                        </CSSTransition>\n                    ) : \"\")\n                }\n            </div>\n        )\n    }\n}\n\nexport default FlashCard\n","export const agendaTypes = {\n  CommonMode: 0, // 一般模式\n  ForumMode: 1, // 論壇模式\n  LTMode: 2, // Lighting Talk\n  RestingMode: 3\n}\n\nexport const Agendas = [\n  {\n    title: '入場時間',\n    name: '',\n    startTime: {\n      hours: 8,\n      minutes: 30\n    },\n    endTime: {\n      hours: 9,\n      minutes: 0\n    },\n    slido: null,\n    type: agendaTypes.RestingMode\n  },\n  {\n    title: '開幕',\n    name: '',\n    startTime: {\n      hours: 9,\n      minutes: 0\n    },\n    endTime: {\n      hours: 9,\n      minutes: 10\n    },\n    slido: null,\n    type: agendaTypes.CommonMode\n  },\n  {\n    title: '機器學習的關鍵下一步',\n    name: '李宏毅',\n    startTime: {\n      hours: 9,\n      minutes: 10\n    },\n    endTime: {\n      hours: 10,\n      minutes: 0\n    },\n    slido: {\n      'link': 'https://sli.do/ozdireqh',\n      'iframe': 'https://wall.sli.do/event/ozdireqh'\n    },\n    type: agendaTypes.CommonMode\n  },\n  {\n    title: '休息時間',\n    name: '',\n    startTime: {\n      hours: 10,\n      minutes: 0\n    },\n    endTime: {\n      hours: 10,\n      minutes: 10\n    },\n    slido: null,\n    type: agendaTypes.RestingMode\n  },\n  {\n    title: '駭入世界最深的海溝',\n    name: 'CIH',\n    startTime: {\n      hours: 10,\n      minutes: 10\n    },\n    endTime: {\n      hours: 11,\n      minutes: 0\n    },\n    slido: {\n      'link': 'https://sli.do/uioorjnh',\n      'iframe': 'https://wall.sli.do/event/uioorjnh'\n    },\n    type: agendaTypes.CommonMode\n  },\n  {\n    title: '休息時間',\n    name: '',\n    startTime: {\n      hours: 11,\n      minutes: 0\n    },\n    endTime: {\n      hours: 11,\n      minutes: 10\n    },\n    slido: null,\n    type: agendaTypes.RestingMode\n  },\n  {\n    title: '第一次做密室逃脫就上手',\n    name: '捲毛',\n    startTime: {\n      hours: 11,\n      minutes: 10\n    },\n    endTime: {\n      hours: 11,\n      minutes: 50\n    },\n    slido: {\n      'link': 'https://sli.do/nnrswoh0',\n      'iframe': 'https://wall.sli.do/event/nnrswoh0'\n    },\n    type: agendaTypes.CommonMode\n  },\n  {\n    title: '午餐',\n    name: '',\n    startTime: {\n      hours: 11,\n      minutes: 50\n    },\n    endTime: {\n      hours: 12,\n      minutes: 40\n    },\n    slido: null,\n    type: agendaTypes.RestingMode\n  },\n  {\n    title: '論壇 - 刪你廢文再收掉服務！大型資訊企業決策的自由與責任',\n    name: '主持人 - 子魚、與談人 - 何明諠、與談人 - 詹婷怡律師',\n    startTime: {\n      hours: 12,\n      minutes: 40\n    },\n    endTime: {\n      hours: 14,\n      minutes: 10\n    },\n    slido: {\n      'link': 'https://sli.do/dh59rkkn',\n      'iframe': 'https://wall.sli.do/event/dh59rkkn'\n    },\n    type: agendaTypes.ForumMode\n  },\n  {\n    title: '休息時間',\n    name: '',\n    startTime: {\n      hours: 14,\n      minutes: 10\n    },\n    endTime: {\n      hours: 14,\n      minutes: 20\n    },\n    slido: null,\n    type: agendaTypes.RestingMode\n  },\n  {\n    title: '我也能讓 Python 幫忙操控電腦嗎？',\n    name: '陳怡升',\n    startTime: {\n      hours: 14,\n      minutes: 20\n    },\n    endTime: {\n      hours: 14,\n      minutes: 30\n    },\n    slido: {\n      'link': 'https://sli.do/8an7mvtb',\n      'iframe': 'https://wall.sli.do/event/8an7mvtb'\n    },\n    type: agendaTypes.CommonMode\n  },\n  {\n    title: '換場',\n    name: '',\n    startTime: {\n      hours: 14,\n      minutes: 30\n    },\n    endTime: {\n      hours: 14,\n      minutes: 35\n    },\n    slido: null,\n    type: agendaTypes.RestingMode\n  },\n  {\n    title: '臉書資料探勘－鯉魚教の教主崇拜分析',\n    name: 'isekai',\n    startTime: {\n      hours: 14,\n      minutes: 35\n    },\n    endTime: {\n      hours: 14,\n      minutes: 45\n    },\n    slido: {\n      'link': 'https://sli.do/by45cctq',\n      'iframe': 'https://wall.sli.do/event/by45cctq'\n    },\n    type: agendaTypes.CommonMode\n  },\n  {\n    title: '換場',\n    name: '',\n    startTime: {\n      hours: 14,\n      minutes: 45\n    },\n    endTime: {\n      hours: 14,\n      minutes: 50\n    },\n    slido: null,\n    type: agendaTypes.RestingMode\n  },\n  {\n    title: '求職助手的開發起源和他的困難點',\n    name: '白天當Student',\n    startTime: {\n      hours: 14,\n      minutes: 50\n    },\n    endTime: {\n      hours: 15,\n      minutes: 0\n    },\n    slido: {\n      'link': 'https://sli.do/5opc27au',\n      'iframe': 'https://wall.sli.do/event/5opc27au'\n    },\n    type: agendaTypes.CommonMode\n  },\n  {\n    title: '點心',\n    name: '',\n    startTime: {\n      hours: 15,\n      minutes: 0\n    },\n    endTime: {\n      hours: 15,\n      minutes: 40\n    },\n    slido: null,\n    type: agendaTypes.RestingMode\n  },\n  {\n    title: '就算是新手，有愛就沒把專案做出來，對吧',\n    name: '宏宏',\n    startTime: {\n      hours: 15,\n      minutes: 40\n    },\n    endTime: {\n      hours: 16,\n      minutes: 20\n    },\n    slido: {\n      'link': 'https://sli.do/wu3rjw5r',\n      'iframe': 'https://wall.sli.do/event/wu3rjw5r'\n    },\n    type: agendaTypes.CommonMode\n  },\n  {\n    title: '休息時間',\n    name: '',\n    startTime: {\n      hours: 16,\n      minutes: 20\n    },\n    endTime: {\n      hours: 16,\n      minutes: 30\n    },\n    slido: null,\n    type: agendaTypes.RestingMode\n  },\n  {\n    title: 'CDN 網站攻擊 - 這次換駭客當鬼來抓你了',\n    name: 'Mico',\n    startTime: {\n      hours: 16,\n      minutes: 30\n    },\n    endTime: {\n      hours: 17,\n      minutes: 10\n    },\n    slido: {\n      'link': 'https://sli.do/nbopftjl',\n      'iframe': 'https://wall.sli.do/event/nbopftjl'\n    },\n    type: agendaTypes.CommonMode\n  },\n  {\n    title: '休息時間',\n    name: '',\n    startTime: {\n      hours: 17,\n      minutes: 10\n    },\n    endTime: {\n      hours: 17,\n      minutes: 15\n    },\n    slido: null,\n    type: agendaTypes.RestingMode\n  },\n  {\n    title: 'Lightning Talk',\n    name: '',\n    startTime: {\n      hours: 17,\n      minutes: 15\n    },\n    endTime: {\n      hours: 17,\n      minutes: 40\n    },\n    slido: null,\n    type: agendaTypes.LTMode\n  },\n  {\n    title: '閉幕',\n    name: '',\n    startTime: {\n      hours: 17,\n      minutes: 40\n    },\n    endTime: {\n      hours: 18,\n      minutes: 0\n    },\n    slido: null,\n    type: agendaTypes.CommonMode\n  }\n]\n\nexport const getAgendas = async () => {\n  const url = 'https://sitcon.org/2020/json/session.json'\n  let res = await fetch(url)\n  let result = await res.json()\n\n  let data = result.sessions.filter(x => x.room === 'R0').map(x => {\n\n    let slido = null\n    let type = agendaTypes.CommonMode\n\n    switch (x.zh.title.trim()) {\n      case '入場時間':\n      case '休息時間':\n      case '換場':\n      case '點心':\n      case '午餐':\n          type = agendaTypes.RestingMode\n          break\n      case '論壇':\n          type = agendaTypes.ForumMode\n          break\n      case 'Lightning Talk':\n          type = agendaTypes.LTMode\n          break\n      default:    \n          type = agendaTypes.CommonMode\n    }\n\n    if (x.qa) {\n      let token = x.qa.match(/([\\w]+?)\\/?$/)[1]\n      slido = {\n        link: x.qa,\n        iframe: 'https://wall.sli.do/event/' + token\n      }\n    }\n\n    return {\n      title: x.zh.title,\n      name: x.speakers.map(y => {\n        return result.speakers.filter(z => z.id === y)[0].zh.name\n      }).join('、'),\n      startTime: {\n        hours: new Date(x.start).getHours(),\n        minutes: new Date(x.start).getMinutes()\n      },\n      endTime: {\n        hours: new Date(x.end).getHours(),\n        minutes: new Date(x.end).getMinutes()\n      },\n      slido,\n      type\n    }\n  })\n\n  data = data.sort((m, n) => {\n    return (m.startTime.hours*60 + m.startTime.minutes) - (n.startTime.hours*60 + n.startTime.minutes)\n  })\n  return data\n}\n","import { agendaTypes } from './agendas'\n\nexport const layoutTypes = {\n    LayoutA: \"一般\",\n    LayoutB: \"論壇\",\n    LayoutC: \"Lighting Talk\"\n}\n\nexport const layoutControlModes = {\n    [agendaTypes.CommonMode]: {\n        \"PPT+SLIDO\": {\n            type: layoutTypes.LayoutA,\n            name: \"PPT+SLIDO\",\n            prop: {\n                main: \"ppt\",\n                second: \"slido\"\n            }\n        },\n        \"PPT+IRC\": {\n            type: layoutTypes.LayoutA,\n            name: \"PPT+IRC\",\n            prop: {\n                main: \"ppt\",\n                second: \"irc\"\n            }\n        },\n        \"SLIDO+IRC\": {\n            type: layoutTypes.LayoutA,\n            name: \"SLIDO+IRC\",\n            prop: {\n                main: \"slido\",\n                second: \"irc\"\n            }\n        }\n    },\n    [agendaTypes.ForumMode]: {\n        \"PPT\": {\n            type: layoutTypes.LayoutB,\n            name: \"PPT\",\n            prop: {\n                main: \"ppt\"\n            }\n        },\n        \"SLIDO\": {\n            type: layoutTypes.LayoutB,\n            name: \"SLIDO\",\n            prop: {\n                main: \"slido\"\n            }\n        }\n    },\n    [agendaTypes.LTMode]: {\n        \"PPT+IRC\": {\n            type: layoutTypes.LayoutC,\n            name: \"PPT+IRC\",\n            prop: {\n                main: \"ppt\",\n                second: \"irc\"\n            }\n        },\n        \"STBY\": {\n            type: layoutTypes.LayoutC,\n            name: \"STBY\",\n            prop: {\n                main: \"visual\",\n                second: \"irc\"\n            }\n        },\n        \"TIMEUP\": {\n            type: layoutTypes.LayoutC,\n            name: \"TIMEUP\",\n            prop: {\n                main: \"ppt\",\n                second: \"irc\",\n                timeUp: true\n            }\n        }\n    }\n}\n\nexport const forumSpeakers = [\n\n    {\n        name: '詹婷怡',\n        url: 'r0/CARD_JAN.png'\n    },\n    {\n        name: '何明諠',\n        url: 'r0/CARD_HOU.png'\n    },\n    {\n        name: '主持人',\n        url: 'r0/CARD_HOST.png'\n    },\n    {\n        name: 'EMPTY',\n        url: 'r0/CARD_EMPTY.png'\n    },\n]","import React, { Component } from 'react'\nimport {\n    BrowserRouter as Router,\n    Switch,\n    Route\n} from 'react-router-dom';\n\nimport { IRC, NowAgendaBar, MainDisplay, ButtomBar, Slido, FlashCard } from '../components'\nimport { Agendas, getAgendas } from '../R0Page/agendas';\nimport { forumSpeakers } from '../R0Page/constant'\n\nconst NO_AGENDA_TEXT = 'SITCON 學生計算機年會'\nexport class Test extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            error: null,\n            items: [],\n            latestUpdateId: null,\n            token: process.env.TG_BOT_TOKEN ? process.env.TG_BOT_TOKEN : null,\n            inputToken: \"\",\n            stickersPath: {},\n            agenda: '',\n            Agendas: Agendas,\n            nowForumSpeaker: {\n                name: 'Sharp',\n                url: '1.png'\n            }\n        };\n\n        this.tokenInputOnChange = this.tokenInputOnChange.bind(this);\n        this.saveToken = this.saveToken.bind(this);\n        this.clearSavedMsg = this.clearSavedMsg.bind(this);\n        this.saveMessage = this.saveMessage.bind(this);\n        this.nowPlaying = this.nowPlaying.bind(this)\n        this.changeSpeaker = this.changeSpeaker.bind(this)\n    }\n\n    async componentDidMount() {\n        this.setState({\n            items: localStorage.getItem('messages') ? JSON.parse(localStorage.getItem('messages')) : this.state.items,\n            token: sessionStorage.getItem('bot_token')\n        });\n\n        this.retriveMessage();\n        setInterval(() => {\n            this.retriveMessage();\n        }, 5000);\n        setInterval(this.nowPlaying, 1000)\n        \n        let agendas = await getAgendas()\n        if(agendas) this.setState({Agendas: agendas})\n    }\n\n    nowPlaying() {\n        let nowTime = new Date();\n        for (let e of this.state.Agendas) {\n            if (e.endTime.hours > nowTime.getHours() || ((e.endTime.hours === nowTime.getHours()) && (e.endTime.minutes > nowTime.getMinutes()))) {\n                this.setState({\n                    agenda: e\n                });\n                break;\n            }\n        }\n    }\n\n    retriveMessage() {\n        if (this.state.token === null) return;\n        fetch('https://api.telegram.org/bot' + this.state.token + '/getUpdates?offset=' + (this.state.latestUpdateId + 1))\n            .then(res => res.json())\n            .then((result) => {\n                if (result.ok && result.result) {\n                    let storaged = localStorage.getItem('messages') ? JSON.parse(localStorage.getItem('messages')) : [];\n                    let newItems = [...storaged, ...result.result];\n\n                    this.setState({\n                        latestUpdateId: result.result.length > 0 ? [...result.result].pop().update_id : null,\n                        error: null\n                    });\n\n                    this.saveMessage(newItems);\n                } else {\n                    this.setState({\n                        error: { message: result.error_code + ': ' + result.description }\n                    });\n                }\n            },\n                // Note: it's important to handle errors here\n                // instead of a catch() block so that we don't swallow\n                // exceptions from actual bugs in components.\n                (error) => {\n                    this.setState({\n                        error\n                    });\n                }\n            )\n    }\n\n    getStickerWithFileId(file_id) {\n        return new Promise((resolve, reject) => {\n            fetch('https://api.telegram.org/bot' + this.state.token + '/getFile?file_id=' + file_id)\n                .then(res => res.json())\n                .then((result) => {\n                    if (result.ok && result.result) {\n                        resolve('https://api.telegram.org/file/bot' + this.state.token + '/' + result.result.file_path);\n                    } else {\n                        reject(result);\n                    }\n                })\n                .catch((err) => reject(err));\n        })\n    }\n\n    msgTable() {\n        const { items } = this.state;\n        return (\n            <table style={{ margin: \"0 auto\" }}>\n                <thead>\n                    <tr>\n                        <td><h5>Message Id</h5></td>\n                        <td style={{ padding: \"0 20px\" }}><h5>Message</h5></td>\n                    </tr>\n                </thead>\n                <tbody>\n                    {items.map((item, key) => {\n                        if (item.message.sticker && item.message.sticker.file_id && !this.state.stickersPath[item.message.sticker.file_id]) {\n                            this.getStickerWithFileId(item.message.sticker.file_id).then((path) => {\n                                let newStickersPath = this.state.stickersPath;\n                                newStickersPath[item.message.sticker.file_id] = path;\n                                this.setState({\n                                    stickersPath: newStickersPath\n                                })\n                            })\n                        }\n\n                        return (\n                            <tr key={key}>\n                                <td>\n                                    {item.message.message_id}\n                                </td>\n                                <td style={{ padding: \"0 20px\" }}>\n                                    {item.message.text ? item.message.text : (item.message.sticker ? <img width=\"100px\" height=\"100px\" src={this.state.stickersPath[item.message.sticker.file_id]} alt={item.message.sticker.emoji} /> : <strong>Non Text or sticker</strong>)}\n                                </td>\n                            </tr>\n                        )\n                    })}\n                </tbody>\n            </table>\n        );\n\n    }\n\n    tokenInputOnChange(e) {\n        this.setState({\n            inputToken: e.target.value\n        });\n    }\n\n    saveToken() {\n        sessionStorage.setItem('bot_token', this.state.inputToken);\n        console.log('new token saved');\n        this.setState({\n            token: this.state.inputToken\n        });\n    }\n\n    saveMessage(msgArray) {\n        localStorage.setItem('messages', JSON.stringify(msgArray));\n        this.setState({\n            items: msgArray\n        });\n    }\n\n    clearSavedMsg() {\n        this.saveMessage([]);\n    }\n\n    changeSpeaker() {\n        let index = forumSpeakers.findIndex(e => e.name === this.state.nowForumSpeaker.name)\n        if(index === forumSpeakers.length-1) index = -1\n        this.setState({\n            nowForumSpeaker: forumSpeakers[index+1]\n        })\n    }\n\n    render() {\n        let agenda = this.state.agenda ? this.state.agenda : NO_AGENDA_TEXT;\n        return (\n            <Router>\n                <Switch>\n                    <Route exact path=\"/test\">\n                        <div className=\"test\">\n                            Token: <input onChange={this.tokenInputOnChange} value={this.state.inputToken} />\n                            <button onClick={this.saveToken} style={{ marginLeft: \"10px\" }}>Save Token</button>\n                            <button onClick={this.clearSavedMsg} style={{ marginLeft: \"10px\" }}>Clear Message</button>\n\n                            {this.state.error ? <div style={{ marginBottom: \"10px\" }}>Error: {this.state.error.message}</div> : null}\n                            {this.msgTable()}\n                        </div>\n                    </Route>\n                    <Route path=\"/test/IRC\">\n                        <div className=\"test-IRC\">\n                            <IRC />\n                        </div>\n                    </Route>\n                    <Route path=\"/test/NowAgendaBar\">\n                        <div className=\"test-NowAgendaBar\">\n                            <NowAgendaBar agenda={agenda}/>\n                        </div>\n                    </Route>\n                    <Route path=\"/test/MainDisplay\">\n                        <div className=\"test-MainDisplay\">\n                            <MainDisplay />\n                        </div>\n                    </Route>\n                    <Route path=\"/test/ButtomBar\">\n                        <div className=\"test-ButtomBar\">\n                            <ButtomBar />\n                        </div>\n                    </Route>\n                    <Route path=\"/test/Slido\">\n                        <div className=\"test-Slido\">\n                            <Slido agenda={agenda}/>\n                        </div>\n                    </Route>\n                    <Route path=\"/test/FlashCard\">\n                        <div className=\"test-FlashCard\">\n                            <FlashCard nowForumSpeaker={this.state.nowForumSpeaker} forumSpeakers={forumSpeakers}/>\n                            <button onClick={this.changeSpeaker}>Change!</button>\n                        </div>\n                    </Route>\n                </Switch>\n            </Router>\n\n        );\n    }\n}\n\nexport default Test\n","import React, { Component } from 'react'\nimport { layoutTypes } from './constant'\nimport { IRC, NowAgendaBar, MainDisplay, ButtomBar, SideBlock, Slido, FlashCard } from '../components'\n\nconst NO_AGENDA_TEXT = 'SITCON 學生計算機年會'\nclass R0Page extends Component {\n\n  getSlidoCSS() {\n    if (this.props.currentLayout.type === layoutTypes.LayoutA) {\n      if (this.props.currentLayout.prop.main === 'slido') {\n        return {\n          main: 'slido-on-main slido-on-main-fade-in',\n          sidebar: 'slido-on-sidebar slido-on-sidebar-fade-out'\n        }\n      }\n      else if (this.props.currentLayout.prop.second === \"slido\") {\n        return {\n          main: 'slido-on-main slido-on-main-fade-out',\n          sidebar: 'slido-on-sidebar slido-on-sidebar-fade-in'\n        }\n      }\n      return {\n        main: 'slido-on-main slido-on-main-fade-out',\n        sidebar: 'slido-on-sidebar slido-on-sidebar-fade-out'\n      }\n    }\n    return {\n      main: 'slido-on-main',\n      sidebar: 'slido-on-sidebar'\n    }\n  }\n\n  render() {\n    let agenda = this.props.agenda ? this.props.agenda : NO_AGENDA_TEXT\n\n    if (this.props.currentLayout.type === layoutTypes.LayoutA) {\n      return (\n        <div className=\"R0page\">\n          <div className=\"top-bar\">\n            <NowAgendaBar agenda={agenda} />\n          </div>\n          <div className=\"main\">\n            <div className=\"main-display\">\n              {\n                this.props.currentLayout.prop.main === \"visual\" ?\n                  <>\n                    <div className=\"visual\">\n                      <img className=\"lightningtalk\" src=\"/img/r0/lightningtalk.png\" alt=\"lightning talk\"></img>\n                    </div>\n                  </> :\n                  <MainDisplay agenda={agenda} />\n              }\n              <Slido agenda={agenda} CSS_state={this.getSlidoCSS().main} />\n            </div>\n            <div className=\"side-bar\">\n              <div className=\"side-block\">\n                <SideBlock mode={this.props.currentLayout.prop.second} />\n              </div>\n              <div className=\"side-content\">\n                <IRC />\n                <Slido agenda={agenda} CSS_state={this.getSlidoCSS().sidebar} />\n              </div>\n            </div>\n          </div>\n          <div className=\"bottom-bar\">\n            <ButtomBar />\n          </div>\n        </div>\n      )\n    }\n    else if (this.props.currentLayout.type === layoutTypes.LayoutB) {\n      return (\n        <div className=\"R0page\">\n          <div className=\"top-bar\">\n            <NowAgendaBar agenda={agenda} />\n          </div>\n          <div className=\"main\">\n            <div className={\"forum-slido \" + ((this.props.currentLayout.prop.main === 'slido') ? \"\" : \"forum-slido-hidden\")}>\n              <Slido agenda={agenda} CSS_state={this.getSlidoCSS()} />\n            </div>\n            <div className=\"forum-cam\">\n              <MainDisplay />\n            </div>\n            <div className=\"forum-card\">\n              <FlashCard forumSpeakers={this.props.forumSpeakers} nowForumSpeaker={this.props.nowForumSpeaker} />\n            </div>\n          </div>\n          <div className=\"bottom-bar\">\n            <ButtomBar />\n          </div>\n        </div>\n      )\n    }\n    else if (this.props.currentLayout.type === layoutTypes.LayoutC) {\n\n      return (\n        <div className=\"R0page\">\n\n          <div className={\"timesup \" + (this.props.currentLayout.prop.timeUp ? \"\" : \"timesup-hide\")}>\n\n            <h1>\n              <span className={ (this.props.currentLayout.prop.timeUp ? \"type\" : \"\")}>\n                ERROR: Connection Timed Out\n                <span className=\"caret\">_</span>\n              </span>\n            </h1>\n\n          </div>\n\n          <div className=\"top-bar\">\n            <NowAgendaBar agenda={agenda} />\n          </div>\n          <div className=\"main\">\n            <div className=\"main-display\">\n              {\n                this.props.currentLayout.prop.main === \"visual\" ?\n                  <>\n                    <div className=\"visual\">\n                      <img className=\"lightningtalk\" src=\"/img/r0/lightningtalk.png\" alt=\"lightning talk\"></img>\n                    </div>\n                  </> :\n                  <MainDisplay agenda={agenda} />\n              }\n              <Slido agenda={agenda} CSS_state={this.getSlidoCSS().main} />\n            </div>\n            <div className=\"side-bar\">\n              <div className=\"side-block\">\n                <SideBlock mode={this.props.currentLayout.prop.second} />\n              </div>\n              <div className=\"side-content\">\n                <IRC />\n                <Slido agenda={agenda} CSS_state={this.getSlidoCSS().sidebar} />\n              </div>\n            </div>\n          </div>\n          <div className=\"bottom-bar\">\n            <ButtomBar />\n          </div>\n        </div>\n      )\n    }\n\n    return (\n      <div className=\"integrated\">\n\n      </div>\n    )\n  }\n}\n\nexport default R0Page","import React, { Component } from 'react'\nimport { Agendas, agendaTypes } from './agendas'\nimport R0Page from './R0Page'\nimport { layoutTypes, layoutControlModes, forumSpeakers } from './constant'\n\nconst controlBotStateTypes = {\n    ModeSelect: 1\n}\n\nconst token = process.env.REACT_APP_CONTROL_BOT_TOKEN;\nconst whitelist = process.env.REACT_APP_CONTROL_BOT_WHITELIST;\n\nconst defaultLayout = {\n    type: layoutTypes.LayoutA,\n    name: \"EMPTY\",\n    prop: {}\n};\nconst defaultSpeaker = {\n    name: '詹婷怡',\n    url: 'r0/CARD_JAN.png'\n}\nconst defaultAgenda = {\n    title: 'SITCON 學生計算機年會',\n    name: '',\n    startTime: {\n      hours: 8,\n      minutes: 30\n    },\n    endTime: {\n      hours: 9,\n      minutes: 0\n    },\n    slido: null,\n    type: agendaTypes.CommonMode\n  }\n\nexport class R0Controller extends Component {\n    chatIds = [] // chatId of the users that use controller\n\n    constructor(props) {\n        super(props);\n\n        let agenda = defaultAgenda\n        if (localStorage.agenda) {\n            agenda = Agendas[parseInt(localStorage.agenda)] ? Agendas[parseInt(localStorage.agenda)] : agenda;\n        }\n\n        this.state = {\n            agenda,\n            autoAgenda: !localStorage.autoAgenda || localStorage.autoAgenda === \"true\" ? true : false,\n            controlBotState: controlBotStateTypes.ModeSelect,\n            currentLayout: localStorage.currentLayout ? JSON.parse(localStorage.currentLayout) : defaultLayout,\n            nowForumSpeaker: localStorage.ForumSpeaker ? JSON.parse(localStorage.ForumSpeaker) : defaultSpeaker,\n            botId: localStorage.botId ? JSON.parse(localStorage.botId) : null,\n        }\n\n        this.getAgendaByTime = this.getAgendaByTime.bind(this);\n        this.controlBotUpdate = this.controlBotUpdate.bind(this);\n        this.updateAgenda = this.updateAgenda.bind(this)\n\n        this.chatIds = localStorage.chatIds ? JSON.parse(localStorage.chatIds) : [];\n\n        localStorage.autoAgenda = this.state.autoAgenda;\n    }\n\n    getAgendaByTime() {\n        let nowTime = new Date();\n        let nowDate = nowTime.getHours() * 60 + nowTime.getMinutes()\n\n        let currentAgendaIndex = Agendas.findIndex(e => {\n            let startDate = e.startTime.hours * 60 + e.startTime.minutes\n            let endDate = e.endTime.hours * 60 + e.endTime.minutes\n            return (startDate <= nowDate) && (nowDate < endDate)\n        })\n\n        if (this.state.autoAgenda) {\n            while (currentAgendaIndex >= 0 && Agendas[currentAgendaIndex].type === agendaTypes.RestingMode) {\n                currentAgendaIndex--;\n            }\n\n            const agenda = currentAgendaIndex < 0 ? defaultAgenda : Agendas[currentAgendaIndex];\n            if(this.state.botId && (agenda !== this.state.agenda)) {\n                setTimeout(() => { this.controlBotSend(this.state.botId) }, 500)\n            }\n            return agenda\n        }\n    }\n\n    getDefaultLayout(agenda) {\n        let controlModes = layoutControlModes[agenda.type]\n        switch(agenda.type) {\n            case agendaTypes.ForumMode:\n                return controlModes['PPT']\n            default:\n                return controlModes['PPT+IRC']\n        }\n    }\n\n    updateAgenda(data) {\n        let agenda = this.state.agenda\n        // console.log(agenda)\n        if(data && data.callback_query) {\n            const callback_query = data.callback_query;\n            const newAgendaI = callback_query.data;\n            agenda = Agendas[newAgendaI]\n        }\n        else if(this.state.autoAgenda) {\n            agenda = this.getAgendaByTime()\n        }\n        // console.log(agenda)\n        let currentLayout = this.state.currentLayout\n        let controlModes = layoutControlModes[agenda.type]\n        // console.log(currentLayout, controlModes)\n        if(!controlModes[currentLayout.name]) {\n            currentLayout = this.getDefaultLayout(agenda)\n        }\n\n        this.setState({\n            agenda,\n            currentLayout\n        })\n    }\n\n    componentDidMount() {\n        setInterval(this.updateAgenda, 1000);\n        this.controlBotUpdate();\n    }\n\n    controlBotSend(id, text, reply_markup) {\n        console.log('ControlBotSend!')\n        const controlModes = this.getCurrentControlModes();\n        let modeKeyboard = [[]];\n        Object.keys(controlModes).map(k => modeKeyboard[modeKeyboard.length - 1].push({ text: k }));\n        modeKeyboard.push([])\n        if (this.state.agenda && this.state.agenda.type === agendaTypes.ForumMode) {\n            forumSpeakers.map((e,i,a) => {\n                modeKeyboard[modeKeyboard.length - 1].push({ text: e.name })\n                if(i===a.length-2) modeKeyboard.push([])\n                return 0\n            })\n        }\n        //else {\n        //}\n\n\n        console.log(modeKeyboard);\n\n        fetch(\"https://api.telegram.org/bot\" + token + \"/sendMessage\", {\n            method: \"POST\",\n            headers: { \"Content-Type\": \"application/json\" },\n            body: JSON.stringify({\n                chat_id: id,\n                text: text || (text !== false ? '模式：' + (this.state.autoAgenda ? '自動（切換為手動 /manual）' : '手動（切換為自動 /auto）') + '\\n版型：' + this.state.currentLayout.type + \" > \" + this.state.currentLayout.name + '\\n議程：' + (this.state.agenda && this.state.agenda.title ? this.state.agenda.title : this.state.agenda) : null),\n                reply_markup: reply_markup ? reply_markup : (modeKeyboard.some(x => x.length > 0) ? { keyboard: modeKeyboard } : { remove_keyboard: true })\n            })\n        })\n    }\n\n\n\n    controlBotAnswerCallbackQuery(callback_query_id, text) {\n        fetch(\"https://api.telegram.org/bot\" + token + \"/answerCallbackQuery\", {\n            method: \"POST\",\n            headers: { \"Content-Type\": \"application/json\" },\n            body: JSON.stringify({\n                callback_query_id: callback_query_id,\n                text: text\n            })\n        })\n    }\n\n    getCurrentControlModes = () => {\n        let controlModes = {};\n        if (this.state.agenda && typeof this.state.agenda === \"object\") {\n            controlModes = layoutControlModes[this.state.agenda.type];\n        };\n\n        return controlModes;\n    }\n\n    controlBotReceived(data) {\n        if (data.message) {\n            console.log(data.message)\n            console.log(whitelist)\n            console.log(data.message.from.username)\n            if (!whitelist.includes(`@${data.message.from.username}`)) {\n                console.log(`@${data.message.from.username} NOT CONTROLLER!!!`)\n                return\n            }\n            if (this.chatIds.findIndex((id) => id === data.message.chat.id) === -1) {\n                this.chatIds.push(data.message.chat.id);\n            }\n            this.setState({\n                botId: data.message.chat.id\n            })\n            // Agenda\n            if (data.message.text.search(\"/auto\") === 0) {\n                this.setState({\n                    autoAgenda: true\n                })\n\n                localStorage.autoAgenda = \"true\";\n                this.controlBotSend(data.message.chat.id, \"切換為自動議程\")\n                setTimeout(() => { this.controlBotSend(data.message.chat.id) }, 1000)\n            }\n            else if (data.message.text.search(\"/manual\") === 0) {\n                this.setState({\n                    autoAgenda: false\n                })\n\n                localStorage.autoAgenda = \"false\";\n\n                this.controlBotSend(data.message.chat.id, \"切換為手動議程\\n選擇議程 /set\")\n            }\n            else if (data.message.text.search(\"/set\") === 0) {\n                let keyboard = [];\n                let counter = 0;\n                let index = 0;\n                Agendas.forEach((a, i) => {\n                    if (a.type !== agendaTypes.RestingMode) {\n                        if (!keyboard[index]) {\n                            keyboard[index] = [];\n                        }\n                        keyboard[index].push({\n                            text: a.title,\n                            callback_data: i\n                        })\n                        counter++;\n                        if (counter >= 2) {\n                            counter = 0;\n                            index++;\n                        }\n                    }\n                })\n\n                this.controlBotSend(data.message.chat.id, \"請在下方選擇議程\", { inline_keyboard: keyboard });\n            }\n            // cancel command\n            else if (data.message.text.search(\"/cancel\") === 0) {\n                this.setState({\n                    controlBotState: controlBotStateTypes.ModeSelect\n                })\n\n                this.controlBotSend(data.message.chat.id, \"已取消動作\")\n            }\n\n            // select layout mode\n            else if (this.state.controlBotState === controlBotStateTypes.ModeSelect) {\n                let found = true;\n                console.log(found)\n                console.log(forumSpeakers, data.message);\n                let controlModes = this.getCurrentControlModes()\n\n                if (controlModes[data.message.text] !== undefined) {\n                    this.setState({\n                        currentLayout: controlModes[data.message.text]\n                    })\n                }\n                else if (this.state.agenda.type === agendaTypes.ForumMode) {\n                    let index = forumSpeakers.findIndex(e => e.name === data.message.text)\n                    if (index >= 0)\n                        this.setState({\n                            // currentLayout: controlModes['MAIN'],\n                            nowForumSpeaker: forumSpeakers[index]\n                        })\n                    else found = false;\n                } else found = false;\n\n                if (found) {\n                    localStorage.currentLayout = JSON.stringify(this.state.currentLayout);\n                    this.controlBotSend(data.message.chat.id, null);\n                } else {\n                    this.controlBotSend(data.message.chat.id, \"無效的模式\");\n                }\n            }\n        }\n        else if (data.callback_query) {\n            const callback_query = data.callback_query;\n            const newAgendaI = callback_query.data;\n            this.updateAgenda(data)\n\n            this.setState({\n                autoAgenda: false,\n                controlBotState: controlBotStateTypes.ModeSelect\n            })\n\n            this.chatIds.forEach((id) => {\n                this.controlBotSend(id);\n            });\n\n            localStorage.agenda = newAgendaI;\n            localStorage.autoAgenda = \"false\";\n\n            this.controlBotAnswerCallbackQuery(callback_query.id, \"議程設定為：\" + Agendas[newAgendaI].title);\n        }\n    }\n\n    controlBotUpdate() {\n        fetch(\"https://api.telegram.org/bot\" + token + \"/getUpdates\", {\n            method: \"POST\",\n            headers: { \"Content-Type\": \"application/json\" },\n            body: JSON.stringify({\n                offset: +localStorage.control_offset + 1,\n                timeout: 60\n            }),\n        })\n            .then(res => res.json())\n            .then((result) => {\n                if (result.ok) {\n                    result.result.forEach((r) => {\n                        localStorage.control_offset = r.update_id\n                        this.controlBotReceived(r)\n                        this.updateAgenda(r)\n                    })\n                }\n                setTimeout(() => {\n                    this.controlBotUpdate()\n                }, 100)\n            }, (error) => {\n                this.setState({\n                    error\n                });\n\n                setTimeout(() => {\n                    this.controlBotUpdate()\n                }, 100)\n            })\n    }\n\n    render() {\n        return (\n            <R0Page\n                currentLayout={this.state.currentLayout}\n                autoAgenda={this.state.autoAgenda}\n                agenda={this.state.agenda}\n                forumSpeakers={forumSpeakers}\n                nowForumSpeaker={this.state.nowForumSpeaker}\n            />\n        )\n    }\n}\n\nexport default R0Controller\n","import React from 'react';\nimport './assets/scss/main.scss';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route\n} from 'react-router-dom';\n\nimport Test from './test';\nimport R0Controller from './R0Page';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Router>\n        <Switch>\n          <Route exact path=\"/\">\n            <R0Controller />\n          </Route>\n          <Route path=\"/test\">\n            <Test />\n          </Route>\n        </Switch>\n      </Router>\n    </div>\n  )\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n// import './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}